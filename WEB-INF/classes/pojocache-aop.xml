<?xml version="1.0" encoding="UTF-8"?>
<aop>
	<!-- This defines the PojoCache 2.0 interceptor stack. Unless necessary, don't modify the stack here! -->
	<!-- Check id range validity -->
	<interceptor name="CheckId"
		class="org.jboss.cache.pojo.interceptors.CheckIdInterceptor"
		scope="PER_INSTANCE" />
	<!-- Track Tx undo operation -->
	<interceptor name="Undo"
		class="org.jboss.cache.pojo.interceptors.PojoTxUndoInterceptor"
		scope="PER_INSTANCE" />
	<!-- Begining of interceptor chain -->
	<interceptor name="Start"
		class="org.jboss.cache.pojo.interceptors.PojoBeginInterceptor"
		scope="PER_INSTANCE" />
	<!-- Check if we need a local tx for batch processing -->
	<interceptor name="Tx"
		class="org.jboss.cache.pojo.interceptors.PojoTxInterceptor"
		scope="PER_INSTANCE" /> 
	<!-- Mockup failed tx for testing. You will need to set PojoFailedTxMockupInterceptor.setRollback(true) to activate it. 
	<interceptor name="MockupTx"
		class="org.jboss.cache.pojo.interceptors.PojoFailedTxMockupInterceptor"
		scope="PER_INSTANCE" />-->
	<!-- Perform parent level node locking 
	<interceptor name="TxLock"
		class="org.jboss.cache.pojo.interceptors.PojoTxLockInterceptor"
		scope="PER_INSTANCE" />-->
	<!-- Interceptor to perform Pojo level rollback 
	<interceptor name="TxUndo"
		class="org.jboss.cache.pojo.interceptors.PojoTxUndoSynchronizationInterceptor"
		scope="PER_INSTANCE" />-->
	<!-- Interceptor to used to check recursive field interception. -->
	<interceptor name="Reentrant"
		class="org.jboss.cache.pojo.interceptors.MethodReentrancyStopperInterceptor"
		scope="PER_INSTANCE" />
	<!-- Whether to allow non-serializable pojo. Default is false. -->
	<interceptor name="MarshallNonSerializable"
		class="org.jboss.cache.pojo.interceptors.CheckNonSerializableInterceptor"
		scope="PER_INSTANCE">
		<attribute name="marshallNonSerializable">false</attribute>
	</interceptor>
	<!-- This defines the stack macro -->
	<stack name="Attach">
		<interceptor-ref name="Start" />
		<interceptor-ref name="CheckId" />
		<interceptor-ref name="MarshallNonSerializable" />
		<interceptor-ref name="Tx" />
		<!-- NOTE: You can comment this out during production
			although leaving it here is OK. 
		<interceptor-ref name="MockupTx" />
		<interceptor-ref name="TxLock" />
		<interceptor-ref name="TxUndo" />-->
	</stack>
	<stack name="Detach">
		<interceptor-ref name="Start" />
		<interceptor-ref name="CheckId" />
		<interceptor-ref name="Tx" />
		<!-- NOTE: You can comment this out during production
			although leaving it here is OK. 
		<interceptor-ref name="MockupTx" />
		<interceptor-ref name="TxLock" />
		<interceptor-ref name="TxUndo" />-->
	</stack>
	<stack name="Find">
		<interceptor-ref name="Start" />
		<interceptor-ref name="CheckId" />
	</stack>
	<!--
		The following section should be READ-ONLY!! It defines the
		annotation binding to the stack.
	-->
	<!-- This binds the jointpoint to specific in-memory
		operations. Currently in PojoUtil. -->
	<bind
		pointcut="execution(*
@org.jboss.cache.pojo.annotation.Reentrant->toString())">
		<interceptor-ref name="Reentrant" />
	</bind>
	<bind
		pointcut="execution(*org.jboss.cache.pojo.PojoUtil->@org.jboss.cache.pojo.annotation.TxUndo(..))">
		<interceptor-ref name="Undo" />
	</bind>
	<bind
		pointcut="execution(*
org.jboss.cache.pojo.impl.PojoCacheImpl->@org.jboss.cache.pojo.annotation.Attach(..))">
		<stack-ref name="Attach" />
	</bind>
	<bind
		pointcut="execution(*
org.jboss.cache.pojo.impl.PojoCacheImpl->@org.jboss.cache.pojo.annotation.Detach(..))">
		<stack-ref name="Detach" />
	</bind>
	<bind
		pointcut="execution(*org.jboss.cache.pojo.impl.PojoCacheImpl->@org.jboss.cache.pojo.annotation.Find(..))">
		<stack-ref name="Find" />
	</bind>
	<!-- If a POJO has PojoCachable annotation, it will be asepctized. -->
	<prepare
		expr="field(*$instanceof{@org.jboss.cache.pojo.annotation.Replicable}->*)" />
	<!-- Observer and Observable to monitor field modification
	-->
	<bind
		pointcut="set(*$instanceof{@org.jboss.cache.pojo.annotation.Replicable}->*)">
		<interceptor
			class="org.jboss.cache.pojo.observable.SubjectInterceptor" />
	</bind>
	<introduction
		class="$instanceof{@org.jboss.cache.pojo.annotation.Replicable}">
		<mixin>
			<interfaces>
				org.jboss.cache.pojo.observable.Subject
			</interfaces>
			<class>org.jboss.cache.pojo.observable.SubjectImpl</class>
			<construction>
				new org.jboss.cache.pojo.observable.SubjectImpl(this)
			</construction>
		</mixin>
	</introduction>
</aop>